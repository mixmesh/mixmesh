#!/bin/sh

usage()
{
    >&2 echo "obscrete --help | -h"
    >&2 echo "    Display available options"
    >&2 echo "obscrete [--config <CONFIG-FILE>] [--]"
    >&2 echo "    Start Obscrete (put erl options after --)"
    >&2 echo "obscrete --reload [--control-address <IP-ADDRESS>] [--control-port <PORT>]"
    >&2 echo "    Reload Obscrete"
    >&2 echo "obscrete --stop [--control-address <IP-ADDRESS>] [--control-port <PORT>]"
    >&2 echo "    Stop Obscrete"
    >&2 echo "obscrete --generate-self-signed-certificate"
    >&2 echo "    Generate dummy self signed certificate to stdout"
    >&2 echo "obscrete --salt-password <PASSWORD>"
    >&2 echo "    Generate a salted password"
    >&2 echo "obscrete --simulator"
    >&2 echo "    Start in simulator mode"
    exit 100
}

erl=`which erl`
if [ -z "${erl}" ]; then
    >&2 echo "Could not find erl in path!"
    exit 1
fi

bin_dir=${0%/*}
erl_libs=${bin_dir}/../..
pa="-pa ${erl_libs}/*/test"
perform="-eval obscrete:start()"
simulator=0

while :; do
    case $1 in
        --help | -h)
            usage
            ;;
        --config)
            if [ $# -lt 2 ]; then
                usage
            fi
            config="--config $2"
            shift
            ;;
        --reload)
            shell="-noinput"
            perform="-run obscrete_config_serv reload"
            break
            ;;
        --control-address)
            if [ $# -lt 2 ]; then
                usage
            fi
            control_address="--control-address $2"
            shift
            ;;
        --control-port)
            if [ $# -lt 2 ]; then
                usage
            fi
            control_port="--control-port $2"
            shift
            ;;
        --stop)
            shell="-noinput"
            perform="-run obscrete_config_serv stop"
            break
            ;;
        --generate-self-signed-certificate)
            if which openssl > /dev/null; then
                openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -subj "/" -keyout /tmp/key.pem -out /tmp/cert.pem > /dev/null 2>&1
                cat /tmp/key.pem /tmp/cert.pem
                rm -f /tmp/key.pem /tmp/cert.pem
                exit 0
            else
                >&2 echo "OpenSSL must be installed to create a certificate"
                exit 1
            fi
            ;;
        --salt-password)
            if [ $# -lt 2 ]; then
                usage
            fi
            shell="-noinput"
            perform="-run obscrete salt_password $2"
            shift
            break
            ;;
	--simulator)
	    simulator=1
	    ;;
        --)
            shift
            erl_options=$@
            break
            ;;
        "")
            break
            ;;
        *)
            usage
    esac
    command shift
done

if [ ${simulator} -eq 1 ]; then
    if [ -d ${bin_dir}/../../simulator ]; then
	erl_config="-config ${bin_dir}/simulator.config"
    else
        >&2 echo "no simulator directory found"
	exit 1
    fi
else
    erl_config="-config ${bin_dir}/obscrete.config"
fi

# needed for servator(build release)/epx(simulator) etc
export ERL_LIBS=${erl_libs}:$ERL_LIBS

echo ${erl} ${pa} ${erl_config} ${config} ${shell} ${control_address} ${control_port} ${perform} ${erl_options}

${erl} ${pa} ${erl_config} ${config} ${shell} ${control_address} ${control_port} ${perform} ${erl_options}
