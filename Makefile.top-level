# -*- MakeFile -*-
# Get path abobe where this Makefile is located
LPATH=$(abspath $(dir $(realpath $(firstword $(MAKEFILE_LIST))))..)

ERL=$(shell which erl)
ERL_TOP=$(ERL:%/bin/erl=%)

ALL_LIST = $(shell (cd $(LPATH); ls -I "Makefile*" -I "*~"))
APP_LIST = apptools elgamal enacl jsone mail mpa nodis obscrete pki player tor
SIM_LIST = rstar simulator
TEST_LIST = $(shell (cd $(LPATH); ls -d */test))

#GITURL = https://github.com/obscrete
GITURL = git@github.com:obscrete


# make all (directories found in parent) and test
all: allapp test
	@echo "ok"

# make all apps found in parent
allapp:
	@for lib in $(ALL_LIST) ; do \
		(cd $(LPATH)/$$lib && $(MAKE) all) || exit 1; \
	done

# Make the pure application, that is not simulator
app:
	@for lib in $(APP_LIST) ; do \
		(cd $(LPATH)/$$lib && $(MAKE) all) || exit 1; \
	done

# clean test and all apps found
clean:
	@for test in $(TEST_LIST) ; do \
		(cd $(LPATH)/$$test && $(MAKE) clean) || exit 1; \
	done
	@for lib in $(ALL_LIST) ; do \
		(cd $(LPATH)/$$lib && $(MAKE) clean) || exit 1; \
	done
	rm -f dialyzer.plt

mrproper: clean cleanfluff
	rm -f dialyzer_init.plt

cleanfluff:
	@for lib in $(ALL_LIST) ; do \
		find $(LPATH)/$$lib \( -name erl_crash.dump -or -name '*.beam' -or -name "*~" -or -name '#*' -or -name '.#*' \) -exec rm {} \;; \
	done

# build test listed
test:
	@for test in $(TEST_LIST) ; do \
		(cd $(LPATH)/$$test && $(MAKE) all) || exit 1; \
	done

# run test listed
runtests: test
	@for test in $(TEST_LIST) ; do \
		(cd $(LPATH)/$$test && make runtest) || exit 1; \
	done

# pull all repos found in parent directory
megapull: pull
pull:
	@for lib in $(ALL_LIST) ; do \
		echo "==== Pull $$lib ===="; \
		(cd $(LPATH)/$$lib && git pull) || exit 1; \
	done

# push all repos found in parent directory
megapush: push
push:
	@for lib in $(ALL_LIST) ; do \
		echo "==== Push $$lib ===="; \
		(cd $(LPATH)/$$lib && git push) || exit 1; \
	done

# get status for all repos found in parent directory
megastatus: status
status:
	@for lib in $(ALL_LIST) ; do \
		echo "==== Status of $$lib ===="; \
		(cd $(LPATH)/$$lib && git status -s) || exit 1; \
	done

# commit all repos found in parent directory
megacommit: commit
commit:
	@if [ ! -z "$(COMMENT)" ]; then \
		for lib in $(ALL_LIST) ; do \
			echo "==== Commit $$lib ===="; \
			(cd $(LPATH)/$$lib && git commit -a -m "$(COMMENT)" | true) || exit 1; \
			echo "$(COMMENT)"; \
		done \
	else \
		echo "COMMENT environment variable must be set!"; \
	fi

# Clone everything
megaclone: clone simclone

# Clone the application, except obscrete!
clone:
	@for lib in $(filter-out obscrete,$(APP_LIST)) ; do \
		echo "==== Clone $$lib ===="; \
		(cd $(LPATH) && git clone $(GITURL)/$$lib) || exit 1; \
	done

# Clone the simulator apps
simclone:
	@for lib in $(SIM_LIST) ; do \
		echo "==== Clone $$lib ===="; \
		(cd $(LPATH) && git clone $(GITURL)/$$lib) || exit 1; \
	done

# print som info
info:
	@echo "LPATH="$(LPATH)
	@echo "ERL_TOP="$(ERL_TOP)
	@echo "ALL="$(ALL_LIST)
	@echo "APP="$(APP_LIST)
	@echo "SIM="$(SIM_LIST)
	@echo "TEST="$(TEST_LIST)
	@echo "CLONE="$(filter-out obscrete,$(APP_LIST))

#
# Type checking
#

.PHONY: dialyzer

# The rstar application is out of scope
DIALYZER_APPS=apptools elgamal enacl jsone mail mpa nodis obscrete pki player simulator tor

# FIXME: *_nif.beam files confuse dialyzer so I just delete them :-)
dialyzer: dialyzer.plt
	@echo "BEWARE: gmp_nif.beam and simulator_nif.beam are removed permanently!!!"
	rm -f $(LPATH)/mpa/ebin/gmp_nif.beam $(LPATH)/simulator/ebin/simulator_nif.beam
	dialyzer --verbose --no_native_cache --no_check_plt --plt $< -r $(DIALYZER_APPS:%=$(LPATH)/%/ebin)

dialyzer.plt: dialyzer_init.plt
	rm -f $@ ; cp $< $@
	dialyzer --verbose --no_native_cache --check_plt --plt $@ || true

DIALYZER_PLT_APPS=asn1 compiler crypto erts ftp hipe inets kernel mnesia public_key runtime_tools sasl ssl stdlib syntax_tools tftp tools

dialyzer_init.plt:
	rm -f $@
	@echo "BEWARE: This will take several minutes the first time..."
	dialyzer --verbose --no_native_cache --build_plt --output_plt $@ -r $(DIALYZER_PLT_APPS:%=$(ERL_TOP)/lib/erlang/lib/%-*/ebin)
